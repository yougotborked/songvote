// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package store

import (
	"context"
)

// iteratorForInsertPairwiseResults implements pgx.CopyFromSource.
type iteratorForInsertPairwiseResults struct {
	rows                 []InsertPairwiseResultsParams
	skippedFirstNextCall bool
}

func (r *iteratorForInsertPairwiseResults) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForInsertPairwiseResults) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Winner,
		r.rows[0].Loser,
		r.rows[0].CreatedAt,
	}, nil
}

func (r iteratorForInsertPairwiseResults) Err() error {
	return nil
}

func (q *Queries) InsertPairwiseResults(ctx context.Context, arg []InsertPairwiseResultsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"pairwise_result"}, []string{"winner", "loser", "created_at"}, &iteratorForInsertPairwiseResults{rows: arg})
}
